// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Library.Models
{
    public partial class bookContext : DbContext
    {
        public bookContext()
        {
        }

        public bookContext(DbContextOptions<bookContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Tbook> Tbook { get; set; }
        public virtual DbSet<TborrowingRecord> TborrowingRecord { get; set; }
        public virtual DbSet<Tinventory> Tinventory { get; set; }
        public virtual DbSet<Tuser> Tuser { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Tbook>(entity =>
            {
                entity.HasKey(e => e.Isbn)
                    .HasName("PK_Book");

                entity.ToTable("TBook");

                entity.Property(e => e.Isbn)
                    .ValueGeneratedNever()
                    .HasColumnName("ISBN");

                entity.Property(e => e.Author).HasMaxLength(100);

                entity.Property(e => e.BookName).HasMaxLength(100);

                entity.Property(e => e.Introduction).HasMaxLength(300);
            });

            modelBuilder.Entity<TborrowingRecord>(entity =>
            {
                entity.HasKey(e => e.BorrowingId)
                    .HasName("PK_BorrowingRecord");

                entity.ToTable("TBorrowingRecord");

                entity.Property(e => e.BorrowingTime).HasColumnType("datetime");

                entity.Property(e => e.ReturnTime).HasColumnType("datetime");

                entity.HasOne(d => d.Inventory)
                    .WithMany(p => p.TborrowingRecord)
                    .HasForeignKey(d => d.InventoryId)
                    .HasConstraintName("FK_BorrowingRecord_Inventory");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.TborrowingRecord)
                    .HasForeignKey(d => d.UserId)
                    .HasConstraintName("FK_BorrowingRecord_User");
            });

            modelBuilder.Entity<Tinventory>(entity =>
            {
                entity.HasKey(e => e.InventoryId)
                    .HasName("PK_Inventory");

                entity.ToTable("TInventory");

                entity.Property(e => e.Isbn).HasColumnName("ISBN");

                entity.Property(e => e.Status).HasMaxLength(50);

                entity.Property(e => e.StoreTime).HasColumnType("datetime");

                entity.HasOne(d => d.IsbnNavigation)
                    .WithMany(p => p.Tinventory)
                    .HasForeignKey(d => d.Isbn)
                    .HasConstraintName("FK_Inventory_Book");
            });

            modelBuilder.Entity<Tuser>(entity =>
            {
                entity.HasKey(e => e.UserId)
                    .HasName("PK_User");

                entity.ToTable("TUser");

                entity.Property(e => e.LastLoginTime).HasColumnType("datetime");

                entity.Property(e => e.Password).HasMaxLength(50);

                entity.Property(e => e.Privilege).HasMaxLength(10);

                entity.Property(e => e.RegistrationTime).HasColumnType("datetime");

                entity.Property(e => e.UserName).HasMaxLength(100);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}